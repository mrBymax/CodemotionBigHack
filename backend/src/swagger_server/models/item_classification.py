# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ItemClassification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, found: bool=None, _class: str=None, score: float=None, img_endpoint: str=None):  # noqa: E501
        """ItemClassification - a model defined in Swagger

        :param found: The found of this ItemClassification.  # noqa: E501
        :type found: bool
        :param _class: The _class of this ItemClassification.  # noqa: E501
        :type _class: str
        :param score: The score of this ItemClassification.  # noqa: E501
        :type score: float
        :param img_endpoint: The img_endpoint of this ItemClassification.  # noqa: E501
        :type img_endpoint: str
        """
        self.swagger_types = {
            'found': bool,
            '_class': str,
            'score': float,
            'img_endpoint': str
        }

        self.attribute_map = {
            'found': 'found',
            '_class': 'class',
            'score': 'score',
            'img_endpoint': 'imgEndpoint'
        }

        self._found = found
        self.__class = _class
        self._score = score
        self._img_endpoint = img_endpoint

    @classmethod
    def from_dict(cls, dikt) -> 'ItemClassification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ItemClassification of this ItemClassification.  # noqa: E501
        :rtype: ItemClassification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def found(self) -> bool:
        """Gets the found of this ItemClassification.


        :return: The found of this ItemClassification.
        :rtype: bool
        """
        return self._found

    @found.setter
    def found(self, found: bool):
        """Sets the found of this ItemClassification.


        :param found: The found of this ItemClassification.
        :type found: bool
        """

        self._found = found

    @property
    def _class(self) -> str:
        """Gets the _class of this ItemClassification.


        :return: The _class of this ItemClassification.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class: str):
        """Sets the _class of this ItemClassification.


        :param _class: The _class of this ItemClassification.
        :type _class: str
        """

        self.__class = _class

    @property
    def score(self) -> float:
        """Gets the score of this ItemClassification.


        :return: The score of this ItemClassification.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score: float):
        """Sets the score of this ItemClassification.


        :param score: The score of this ItemClassification.
        :type score: float
        """

        self._score = score

    @property
    def img_endpoint(self) -> str:
        """Gets the img_endpoint of this ItemClassification.


        :return: The img_endpoint of this ItemClassification.
        :rtype: str
        """
        return self._img_endpoint

    @img_endpoint.setter
    def img_endpoint(self, img_endpoint: str):
        """Sets the img_endpoint of this ItemClassification.


        :param img_endpoint: The img_endpoint of this ItemClassification.
        :type img_endpoint: str
        """

        self._img_endpoint = img_endpoint
